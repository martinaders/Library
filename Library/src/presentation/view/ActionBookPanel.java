package presentation.view;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Observable;

import presentation.model.ModelController;

public class ActionBookPanel extends AbstractActionPanel {

	private static final long serialVersionUID = 1L;

	public ActionBookPanel(ModelController controller) {
		super(controller);
	}

	protected void initActionButtons() {
		initSearchButton();
		initLendButton();
		initReturnButton();
		initEditButton();
		initDefektButton();
		initCreateButton();
	}

	private void initDefektButton() {
		buttons.put("defekt", new ActionButton("Als defekt markieren",
				"img/delete32x32h.png", "img/delete32x32.png"));
		buttons.get("defekt").addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				model.markDefekt();
			}
		});
	}

	private void initReturnButton() {
		buttons.put("return", new ActionButton("Buch zurück geben",
				"img/return32x32h.png", "img/return32x32.png"));
		buttons.get("return").addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				buttons.get("search").requestFocus();
				model.returnBook();
			}
		});
	}

	private void initLendButton() {
		buttons.put("lend", new ActionButton("Buch ausleihen",
				"img/add32x32h.png", "img/add32x32.png"));
		buttons.get("lend").setVisible(false);
		buttons.get("lend").addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				buttons.get("lend").requestFocus();
				model.lendBook();
			}
		});
	}

	private void initCreateButton() {
		buttons.put("create", new ActionButton("Neues Buch erstellen",
				"img/new32x32h.png", "img/new32x32.png"));
		buttons.get("create").addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				model.creaNewBook();
			}
		});
	}

	private void initEditButton() {
		buttons.put("edit", new ActionButton("Buchdetails editieren",
				"img/edit32x32h.png", "img/edit32x32.png"));
		buttons.get("edit").setVisible(false);
		buttons.get("edit").addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				// TODO: Autogenerated Prototüp
			}
		});
	}

	private void initSearchButton() {
		buttons.put("search", new ActionButton("Buch suchen",
				"img/search32x32h.png", "img/search32x32.png"));
		buttons.get("search").addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				controller.tabbed_model.setSearchTabActive();
			}
		});
	}

	public void update(Observable o, Object arg) {
		buttons.get("lend").setVisible(
				controller.booktab_model.isActiveBookLendable()
						&& !controller.library
								.isCustomerLocked(controller.activeuser_model
										.getCustomer()));
		buttons.get("return").setVisible(
				controller.booktab_model.isActiveBookReturnable());
		buttons.get("defekt").setVisible(
				controller.booktab_model.isActiveBookNoWaste());
		buttons.get("edit").setVisible(controller.booktab_model.isBookActive());
		buttons.get("search").requestFocus();
	}
}
